# ============================================================================
# Automatic Global Setup Configuration Properties
# ============================================================================
# 
# These properties control the automatic global setup functionality that runs
# at the start of every JMeter test. No GUI elements are required - everything
# is controlled via properties in user.properties or jmeter.properties.
#
# The system automatically registers the GlobalSetupListener via the property:
#   global.setup.listener=com.company.jmeter.setup.GlobalSetupListener
#
# Copy these properties to your user.properties or jmeter.properties as needed.
# ============================================================================

# ----------------------------------------------------------------------------
# Core Features (all default to true for backward compatibility)
# ----------------------------------------------------------------------------

# Template Property Processing
# Converts template.* properties to regular properties and variables
# Example: template.V_STS_HOST=server.com → creates V_STS_HOST=server.com
global.setup.template.processing=true

# Directory Path Setup  
# Establishes JMX_DIR and converts relative paths to absolute paths
# Affects: C_SCRIPTS, P_SCRIPTS, DATA properties
global.setup.directory.setup=true

# Hostname Detection
# Detects system hostname and extracts test name from jm-gen-{testname}-{worker} pattern
# Sets: hostname property, testname variable (if pattern matches)
global.setup.hostname.detection=true

# Environment Configuration
# Auto-configures STS hosts based on hostname patterns
# Remote (jm-gen*, jm-nofrills*): uses V_STS_LOCAL_HOST
# Local (other hostnames): uses V_STS_HOST_DEFAULT
# Sets: IS_LOCAL_ENVIRONMENT, V_STS_HOST
global.setup.environment.detection=true

# Git Repository Discovery
# Finds Git repository information by walking up directory tree
# Sets: GIT_REPO_PATH, GIT_REPO_NAME, GIT_REPO_URL
global.setup.git.detection=true

# ----------------------------------------------------------------------------
# Logging Configuration
# ----------------------------------------------------------------------------

# Verbose Logging
# Enable detailed logging of all global setup operations
# Useful for debugging and monitoring what's being detected/configured
global.setup.logging.verbose=false

# ----------------------------------------------------------------------------
# Environment-Specific STS Configuration
# ----------------------------------------------------------------------------

# STS Host for Remote Execution
# Used when hostname matches jm-gen* or jm-nofrills* patterns
# This should point to the STS instance accessible from remote test machines
V_STS_LOCAL_HOST=your-sts-server.company.com

# STS Host for Local Development
# Used when hostname doesn't match remote patterns
# This should point to your local STS instance or development server
V_STS_HOST_DEFAULT=localhost:8080

# ----------------------------------------------------------------------------
# Directory Configuration Templates
# ----------------------------------------------------------------------------

# Script Directories (converted to absolute paths relative to JMX file)
# These are processed by the directory setup feature
template.C_SCRIPTS=/scripts/common/
template.P_SCRIPTS=/scripts/project/
template.DATA=/data/

# ----------------------------------------------------------------------------
# Usage Examples
# ----------------------------------------------------------------------------

# Example 1: Disable Git detection for performance in large repositories
# global.setup.git.detection=false

# Example 2: Only enable hostname and environment detection
# global.setup.template.processing=false
# global.setup.directory.setup=false
# global.setup.git.detection=false
# global.setup.hostname.detection=true
# global.setup.environment.detection=true

# Example 3: Enable verbose logging for troubleshooting
# global.setup.logging.verbose=true

# Example 4: Completely disable automatic global setup
# global.setup.template.processing=false
# global.setup.directory.setup=false
# global.setup.hostname.detection=false
# global.setup.environment.detection=false
# global.setup.git.detection=false

# ----------------------------------------------------------------------------
# Migration from GUI Global Setup Configuration Element
# ----------------------------------------------------------------------------

# If you're migrating from the GUI Global Setup Configuration element:
# 1. Remove the Global Setup Configuration element from your test plans
# 2. Ensure global.setup.listener is registered (should already be done)
# 3. Configure the properties above as needed
# 4. All functionality will work automatically without any GUI elements

# ----------------------------------------------------------------------------
# Properties Set by Global Setup
# ----------------------------------------------------------------------------

# The following properties/variables are set by the global setup process:
#
# Template Processing:
#   - Converts template.PROPERTY_NAME → PROPERTY_NAME (both prop and var)
#
# Directory Setup:
#   - JMX_DIR: Absolute path to JMX file directory
#   - C_SCRIPTS, P_SCRIPTS, DATA: Converted to absolute paths
#
# Hostname Detection:
#   - hostname: System hostname
#   - testname: Extracted from jm-gen-{testname}-{worker} pattern
#
# Environment Detection:
#   - IS_LOCAL_ENVIRONMENT: "true" or "false"
#   - V_STS_HOST: Set based on hostname pattern
#
# Git Detection:
#   - GIT_REPO_PATH: Absolute path to Git repository root
#   - GIT_REPO_NAME: Repository directory name
#   - GIT_REPO_URL: Git remote URL (if available)

# ----------------------------------------------------------------------------
# Troubleshooting
# ----------------------------------------------------------------------------

# If global setup isn't running:
# 1. Check that global.setup.listener property is set correctly
# 2. Verify the GlobalSetupListener class is in the classpath
# 3. Enable verbose logging to see what's happening
# 4. Check JMeter logs for any error messages

# If specific features aren't working:
# 1. Enable verbose logging to see which features are running
# 2. Check that the feature-specific property is set to true
# 3. Verify that required properties (like V_STS_LOCAL_HOST) are configured
# 4. Test with a minimal configuration to isolate issues 

# ----------------------------------------------------------------------------
# STS Protocol Configuration
# ----------------------------------------------------------------------------

# HTTPS Support for STS Communications
# Default: true (HTTPS) - recommended for production environments
# Set to false only if you encounter SSL certificate issues with internal servers
# Note: Your curl test confirmed HTTPS works with your STS server
sts.use.https=true